{"version":3,"sources":["./src/app/GlobalErrorHandler.ts","./src/app/aid.ts","./src/app/payment.service.ts","./src/app/create-aid/create-aid.component.ts","./src/app/create-aid/create-aid.component.html","./src/app/payment.ts","./src/app/user.ts","./src/app/list-expanse/list-expanse.component.ts","./src/app/list-expanse/list-expanse.component.html","./src/app/create-house/create-house.component.ts","./src/app/create-house/create-house.component.html","./src/environments/environment.ts","./src/app/payemnt-alerts/payment-alert.service.ts","./src/app/payment/payment.component.ts","./src/app/payment/payment.component.html","./src/app/user-details/user.service.ts","./src/app/expanse.ts","./src/app/house.ts","./src/app/create-expanse/create-expanse.component.ts","./src/app/create-expanse/create-expanse.component.html","./src/app/aid.service.ts","./src/app/register-user/register-user.component.html","./src/app/register-user/register-user.component.ts","./src/app/register-user/register.service.ts","./src/app/payemnt-alerts/payemnt-alerts.component.html","./src/app/payemnt-alerts/payemnt-alerts.component.ts","./src/app/list-aid/list-aid.component.ts","./src/app/list-aid/list-aid.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login-user/login.service.ts","./src/app/login-user/login-user.component.ts","./src/app/login-user/login-user.component.html","./src/app/user-details/user-details.component.ts","./src/app/user-details/user-details.component.html","./src/app/expanse.service.ts","./src/app/chose-service/chose-service.component.ts","./src/app/chose-service/chose-service.component.html","./src/app/list-house/list-house.component.ts","./src/app/list-house/list-house.component.html","./src/app/aid-details/aid-details.component.ts","./src/app/aid-details/aid-details.component.html","./src/app/update-aid/update-aid.component.ts","./src/app/update-aid/update-aid.component.html","./src/app/app-routing.module.ts","./src/main.ts","./src/app/house.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ErrorHandler, Injectable, Injector } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class GlobalErrorHandler implements ErrorHandler {\r\n      private router: Router;\r\n      constructor(inject: Injector) {\r\n            this.router = inject.get(Router);\r\n      }\r\n      handleError(error) {\r\n            console.log(error);\r\n            this.router.navigate(['/login']);\r\n            alert(\"Something went wrong!\");\r\n      }\r\n}","import { House } from \"./house\";\r\nimport { Payment } from \"./payment\";\r\n\r\nexport class Aid {\r\n      aidId: number;\r\n      name: string;\r\n      startDate: string;\r\n      endDate: string;\r\n      costOfService: number;\r\n      remainingAmount: number;\r\n      payments: Payment[] = [];\r\n      complete: boolean;\r\n      house: House;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Payment } from './payment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n\n  private baseUrl = 'http://Servicemanagement-env.eba-8uum3ycj.ap-south-1.elasticbeanstalk.com/v1';\n  //private baseUrl = 'http://localhost:8080/v1';\n  //private baseUrl = 'http://10.0.2.2:8080/v1';\n  //private baseUrl = 'http://192.168.1.4:8080/v1';\n\n  constructor(private http: HttpClient) { }\n\n  createPayment(payment: Payment, aidId: number): Observable<Object> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    return this.http.post(`${this.baseUrl}/addPayment/${aidId}`, payment, { headers });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AidService } from '../aid.service';\nimport { Router } from '@angular/router';\nimport { Aid } from '../aid';\nimport { House } from '../house';\nimport { Payment } from '../payment';\n\n@Component({\n  selector: 'app-create-aid',\n  templateUrl: './create-aid.component.html',\n  styleUrls: ['./create-aid.component.css']\n})\nexport class CreateAidComponent implements OnInit {\n\n  aid: Aid = new Aid();\n  submitted = false;\n  house: House = new House();\n  payment: Payment = new Payment();\n  pageHeader: string;\n  isValid: boolean = true;\n  validationMessage = \"All fields are mandatory.\";\n  invalidDate = false;\n  dateValidationMessage = \"End Date must be greater then Start Date.\"\n\n  constructor(private aidService: AidService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.house = history.state.house;\n    this.payment.comment = \"Advance payment\";\n    this.pageHeader = `${this.house.houseNo}, ${this.house.address}`;\n  }\n\n  newAid(): void {\n    this.submitted = false;\n    this.aid = new Aid();\n  }\n\n  save() {\n    var house = new House();\n    var payment = new Payment();\n    house.houseId = this.house.houseId;\n    this.aid.house = house;\n    payment.amount = this.payment.amount;\n    payment.comment = this.payment.comment;\n    this.aid.payments[0] = payment;\n\n    this.aidService\n      .createAid(this.house, this.aid).subscribe(data => {\n        if (data) {\n          console.log(data)\n          this.aid = new Aid();\n          this.isValid = false;\n          this.gotoAidList();\n        }\n\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    if (this.aid.name && this.aid.startDate && this.aid.startDate && this.aid.endDate && this.aid.costOfService) {\n      var start = (<HTMLInputElement>document.getElementById(\"startDate\")).valueAsNumber;\n      var end = (<HTMLInputElement>document.getElementById(\"endDate\")).valueAsNumber;\n\n      if (end < start) {\n        this.invalidDate = true;\n        return false;\n      }\n      this.isValid = true;\n      this.submitted = true;\n      this.save();\n      this.gotoAidList();\n    }\n    else {\n      this.isValid = false;\n      return false;\n    }\n\n  }\n\n  gotoAidList() {\n    this.router.navigate([`/${this.house.houseId}/getAllAidsForHouse`], { state: { house: this.house } });\n  }\n\n}\n","<h3 style=\"text-align: center;\">Add Aid for {{pageHeader}}</h3>\n<div [hidden]=\"submitted\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Aid Name<span style=\"color:#ff0000\">*</span>:</label>\n      <input type=\"text\" class=\"form-control\" id=\"aidName\" required [(ngModel)]=\"aid.name\" name=\"aidName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">House Id<span style=\"color:#ff0000\">*</span>:</label>\n      <input type=\"text\" class=\"form-control\" id=\"houseId\" required [(ngModel)]=\"house.houseId\" name=\"houseId\" readonly>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Start Date<span style=\"color:#ff0000\">*</span>:</label>\n      <input type=\"date\" class=\"form-control\" id=\"startDate\" required [(ngModel)]=\"aid.startDate\" name=\"startDate\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">End Date<span style=\"color:#ff0000\">*</span>:</label>\n      <input type=\"date\" class=\"form-control\" id=\"endDate\" required [(ngModel)]=\"aid.endDate\" name=\"endDate\">\n    </div>\n    <div [hidden]=\"!invalidDate\">\n      <p style=\"background-color: rgb(233, 95, 95); text-align: center;\">{{dateValidationMessage}}</p>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Cost Of Service<span style=\"color:#ff0000\">*</span>:</label>\n      <input type=\"number\" class=\"form-control\" id=\"costOfService\" required [(ngModel)]=\"aid.costOfService\"\n        name=\"costOfService\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Advance Payment<span style=\"color:#ff0000\">*</span>:</label>\n      <input type=\"number\" class=\"form-control\" id=\"amount\" required [(ngModel)]=\"payment.amount\" name=\"amount\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Comment:</label>\n      <input type=\"text\" class=\"form-control\" id=\"comment\" [(ngModel)]=\"payment.comment\" name=\"comment\">\n    </div>\n\n    <br>\n    <div [hidden]=\"isValid\">\n      <p style=\"background-color: rgb(233, 95, 95); text-align: center;\">{{validationMessage}}</p>\n    </div>\n    <br>\n    <div style=\"text-align: center;\">\n      <button type=\"submit\" class=\"btn btn-success\">Add Aid</button>\n    </div>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You submitted successfully!</h4>\n  <!-- <button class=\"btn btn-success\" (click)=\"newEmployee()\">Add</button> -->\n</div>","import { Aid } from \"./aid\";\r\n\r\nexport class Payment {\r\n    paymentId: number;\r\n    amount: number;\r\n    timeStamp: string;\r\n    comment: string;\r\n    aid: Aid;\r\n}","import { House } from \"./house\";\r\n\r\nexport class User {\r\n      userId: number;\r\n      username: string;\r\n      password: string;\r\n      email: string;\r\n      houses: House[] = [];\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Expanse } from '../expanse';\nimport { Observable } from \"rxjs\";\nimport 'rxjs/add/operator/map';\nimport { ExpanseService } from '../expanse.service';\nimport { map } from 'rxjs-compat/operator/map';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-list-expanse',\n  templateUrl: './list-expanse.component.html',\n  styleUrls: ['./list-expanse.component.css']\n})\nexport class ListExpanseComponent implements OnInit {\n  showSpinner: boolean = false;\n  addExpanseButtonDisabled: boolean;\n  expanses: Map<string, Expanse[]>;\n  sortedExpanses: Map<string, Expanse[]>;\n  //expanse: Expanse = new Expanse();\n  username: String;\n\n  constructor(private expanseService: ExpanseService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.showSpinner = true;\n    this.addExpanseButtonDisabled = true;\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.username = localStorage.getItem(\"USERNAME\");\n    this.expanseService.getExpanseListForUser(this.username).subscribe(resp => {\n      if (resp) {\n        this.showSpinner = false;\n        this.addExpanseButtonDisabled = false;\n      }\n      this.expanses = resp;\n      this.expanses;\n      this.sortedExpanses = this.sortByDate(this.expanses);\n    },\n      error => console.log(error));\n  }\n\n  sortByDate(expanses: Map<string, Expanse[]>): Map<string, Expanse[]> {\n    var k: string[] = Object.keys(expanses);;\n    k.sort((one, two) => (one > two ? -1 : 1));\n    var result: Map<string, Expanse[]> = new Map;\n    k.forEach(element => {\n      result.set(element, expanses[element]);\n    });\n    return result\n  }\n\n  asIsOrder(a, b) {\n    return 1;\n  }\n  goToAddExpanse(route: String) {\n    this.router.navigate([`/${route}`]);\n  }\n\n}\n","<div class=\"panel panel-primary\" style=\"text-align: center;\">\n      <div class=\"panel-heading\">\n            <h2>Expanse List</h2>\n      </div>\n      <div class=\"panel-body\">\n            <table class=\"table table-striped\">\n                  <thead>\n                        <tr>\n                              <th>Amount</th>\n                              <th>Comment</th>\n                              <th>Date</th>\n                        </tr>\n                  </thead>\n            </table>\n            <table class=\"table table-striped\">\n                  <tbody>\n                        <table *ngFor=\"let exp of sortedExpanses | keyvalue : asIsOrder\" class=\"table table-striped\">\n                              <thead>\n                                    <th colspan=\"3\" style=\"text-align: center;\">{{exp.key}}</th>\n                              </thead>\n                              <tbody>\n                                    <tr *ngFor=\"let e of exp.value\">\n                                          <td>{{e.amount}}</td>\n                                          <td>{{e.comment}}</td>\n                                          <td>{{e.date}}</td>\n                                    </tr>\n                              </tbody>\n                        </table>\n\n                        <!--</div>-->\n                  </tbody>\n\n            </table>\n      </div>\n\n\n      <div *ngIf=\"showSpinner\" class=\"d-flex justify-content-center\">\n            <div class=\"spinner-border\" role=\"status\">\n                  <span class=\"sr-only\" id=\"loading\"></span>\n            </div>\n      </div>\n      <div style=\"text-align: center;\">\n            <button (click)=\"goToAddExpanse('addExpanse')\" [disabled]=\"addExpanseButtonDisabled\" class=\"btn btn-success\"\n                  style=\"margin-top: 10px;\">Add New Expanse</button>\n      </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { House } from '../house';\nimport { HouseService } from '../house.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-create-house',\n  templateUrl: './create-house.component.html',\n  styleUrls: ['./create-house.component.css']\n})\nexport class CreateHouseComponent implements OnInit {\n\n  house: House = new House();\n  submitted: Boolean = false;\n  isValid: boolean = true;\n  validationMessage = \"All fields are mandatory.\"\n  user: User = new User();\n\n  constructor(private houseService: HouseService, private router: Router) { }\n\n\n  ngOnInit(): void {\n    this.user.username = localStorage.getItem(\"USERNAME\");\n    this.user.userId = parseInt(localStorage.getItem(\"USERID\"));\n  }\n\n  newHouse(): void {\n    this.submitted = false;\n    this.house = new House();\n  }\n\n  save() {\n    this.houseService\n      .createHouse(this.house, this.user).subscribe(data => {\n        console.log(data)\n        this.house = new House();\n        this.isValid = false;\n        this.gotoList();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    if (this.house.houseNo === undefined || this.house.houseNo === null || this.house.address === undefined || this.house.address === null) {\n      this.isValid = false;\n      return false;\n    }\n    this.isValid = true;\n    this.submitted = true;\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate([`/${this.user.username}/getAllHousesForUser`]);\n  }\n\n}\n","<h3 style=\"text-align: center;\">Add House</h3>\r\n<div [hidden]=\"submitted\" class=\"scroll\">\r\n  <form (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">User Id<span style=\"color:#ff0000\">*</span>:</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"userId\" required [(ngModel)]=\"user.userId\" name=\"userId\" readonly>\r\n    </div>\r\n\r\n    <div class=\"form-group form-inline\">\r\n      <label for=\"name\">House Number<span style=\"color:#ff0000\">*</span></label>\r\n      <input type=\"text\" class=\"form-control\" id=\"houseNo\" [(ngModel)]=\"house.houseNo\" name=\"houseNo\" required>\r\n    </div>\r\n\r\n    <div class=\"form-group form-inline\">\r\n      <label for=\"name\">Address<span style=\"color:#ff0000\">*</span></label>\r\n      <input type=\"text\" class=\"form-control\" id=\"address\" [(ngModel)]=\"house.address\" name=\"address\" required>\r\n    </div>\r\n    <br>\r\n    <div [hidden]=\"isValid\">\r\n      <p style=\"background-color: rgb(233, 95, 95); text-align: center;\">{{validationMessage}}</p>\r\n    </div>\r\n    <br>\r\n    <div style=\"text-align: center;\">\r\n      <button type=\"submit\" class=\"btn btn-success\">Add House</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div [hidden]=\"!submitted\">\r\n  <h4>You submitted successfully!</h4>\r\n  <!-- <button class=\"btn btn-success\" (click)=\"newHouse()\">Add</button> -->\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentAlertService {\n\n  private baseUrl = 'http://Servicemanagement-env.eba-8uum3ycj.ap-south-1.elasticbeanstalk.com/v1';\n  //private baseUrl = 'http://10.0.2.2:8080/v1';\n  //private baseUrl = 'http://localhost:8080/v1';\n  //private baseUrl = 'http://192.168.1.4:8080/v1';\n\n  constructor(private http: HttpClient) { }\n\n  getMissedPayments(): Observable<Object> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    var userId = localStorage.getItem(\"USERID\");\n    return this.http.get(`${this.baseUrl}/getMissedPayments/${userId}`, { headers });\n  }\n\n  getPaymentNotification(): Observable<Object> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    var userId = localStorage.getItem(\"USERID\");\n    return this.http.get(`${this.baseUrl}/getPaymentNotification/${userId}`, { headers });\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Payment } from '../payment';\nimport { PaymentService } from '../payment.service';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n\n  payment: Payment = new Payment();\n  submitted: Boolean = false;\n  isValid: boolean = true;\n  validationMessage = \"All fields are mandatory.\";\n  @Output() closePaymentBox: EventEmitter<boolean> = new EventEmitter();\n\n  @Input() aidId: number;\n\n  constructor(private paymentService: PaymentService) { }\n\n  ngOnInit(): void {\n  }\n\n  newPayment(): void {\n    this.submitted = false;\n    this.payment = new Payment();\n  }\n\n  onSubmit() {\n    if (this.payment.amount === undefined || this.payment.amount === null || this.payment.comment === undefined || this.payment.comment === null) {\n      this.isValid = false;\n      return false;\n    }\n    this.isValid = true;\n    this.submitted = true;\n    this.save();\n  }\n\n  save() {\n    this.paymentService\n      .createPayment(this.payment, this.aidId).subscribe(data => {\n        console.log(data)\n        this.payment = new Payment();\n        this.isValid = false;\n        this.closePaymentBox.emit(true);\n      },\n        error => console.log(error));\n  }\n\n  closePaymentDialouge() {\n    this.closePaymentBox.emit(true);\n  }\n}\n","<div [hidden]=\"submitted\">\n      <form (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group form-inline\">\n                  <label for=\"name\" style=\"font-weight: bold;\">Amount:<span style=\"color:#ff0000\">*</span></label>\n                  <input type=\"number\" class=\"form-control\" id=\"amount\" [(ngModel)]=\"payment.amount\" name=\"amount\"\n                        required>\n            </div>\n\n            <div class=\"form-group form-inline\">\n                  <label for=\"name\" style=\"font-weight: bold;\">Comment:<span style=\"color:#ff0000\">*</span></label>\n                  <input type=\"text\" class=\"form-control\" id=\"comment\" [(ngModel)]=\"payment.comment\" name=\"comment\"\n                        required>\n            </div>\n            <br>\n            <div [hidden]=\"isValid\">\n                  <p style=\"background-color: rgb(233, 95, 95); text-align: center;\">{{validationMessage}}</p>\n            </div>\n            <br>\n            <div style=\"text-align: center;\">\n                  <button type=\"submit\" class=\"btn btn-success\" style=\"margin-right: 5px;\">Make Payment</button>\n                  <button class=\"btn btn-success\" (click)=\"closePaymentDialouge()\">Cancel</button>\n            </div>\n      </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n      <h4>You submitted successfully!</h4>\n      <!-- <button class=\"btn btn-success\" (click)=\"newHouse()\">Add</button> -->\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private baseUrl = 'http://Servicemanagement-env.eba-8uum3ycj.ap-south-1.elasticbeanstalk.com/v1';\n  //private baseUrl = 'http://10.0.2.2:8080/v1';\n  //private baseUrl = 'http://localhost:8080/v1';\n  //private baseUrl = 'http://192.168.1.4:8080/v1';\n\n  constructor(private http: HttpClient) { }\n\n  getUserDetails(): Observable<any> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    return this.http.get(`${this.baseUrl}/getUser/${localStorage.getItem(\"USERID\")}`, { headers });\n  }\n}\n","export class Expanse {\r\n      username: string;\r\n      date: Date;\r\n      comment: string;\r\n      amount: number;\r\n}","export class House {\r\n    houseId: number;\r\n    houseNo: string;\r\n    address: string;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Expanse } from '../expanse';\nimport { ExpanseService } from '../expanse.service';\n\n@Component({\n  selector: 'app-create-expanse',\n  templateUrl: './create-expanse.component.html',\n  styleUrls: ['./create-expanse.component.css']\n})\nexport class CreateExpanseComponent implements OnInit {\n\n  constructor(private expanseService: ExpanseService, private router: Router) { }\n\n  expanse: Expanse = new Expanse();\n  submitted: boolean = false;\n  isValid: boolean = false;\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    if (this.expanse.amount && this.expanse.comment && this.expanse.date) {\n      this.isValid = true;\n      this.expanse.username = localStorage.getItem(\"USERNAME\");\n\n      this.expanseService.createExpanse(this.expanse).subscribe(data => {\n        if (data) {\n          console.log(data)\n          this.expanse = new Expanse();\n          this.expanse = data;\n          this.isValid = false;\n          this.gotoExpanseList();\n        }\n      },\n        (error: any) => console.log(error));\n    }\n  }\n\n  gotoExpanseList() {\n    this.router.navigate([`/getAllExpensesForUser/${this.expanse.username}`], { state: { username: this.expanse.username } });\n  }\n\n}\n","<h3 style=\"text-align: center;\">Add Expanse</h3>\n<div [hidden]=\"submitted\">\n      <form (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                  <label for=\"name\">Date<span style=\"color:#ff0000\">*</span>:</label>\n                  <input type=\"date\" class=\"form-control\" id=\"expanseDate\" required [(ngModel)]=\"expanse.date\"\n                        name=\"expanseDate\">\n            </div>\n\n            <div class=\"form-group\">\n                  <label for=\"name\">Amount<span style=\"color:#ff0000\">*</span>:</label>\n                  <input type=\"number\" class=\"form-control\" id=\"amount\" required [(ngModel)]=\"expanse.amount\"\n                        name=\"amount\">\n            </div>\n\n            <div class=\"form-group\">\n                  <label for=\"name\">Comment<span style=\"color:#ff0000\">*</span>:</label>\n                  <input type=\"text\" class=\"form-control\" id=\"comment\" required [(ngModel)]=\"expanse.comment\"\n                        name=\"comment\">\n            </div>\n            <br>\n            <div style=\"text-align: center;\">\n                  <button type=\"submit\" class=\"btn btn-success\">Add Expanse</button>\n            </div>\n      </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n      <h4>Expanse added!</h4>\n      <!-- <button class=\"btn btn-success\" (click)=\"newEmployee()\">Add</button> -->\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Aid } from './aid';\nimport { House } from './house';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AidService {\n\n  private baseUrl = 'http://Servicemanagement-env.eba-8uum3ycj.ap-south-1.elasticbeanstalk.com/v1';\n  //private baseUrl = 'http://10.0.2.2:8080/v1';\n  //private baseUrl = 'http://localhost:8080/v1';\n  //private baseUrl = 'http://192.168.1.4:8080/v1';\n\n  constructor(private http: HttpClient) { }\n\n  createAid(house: House, aid: Aid): Observable<Object> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    return this.http.post(`${this.baseUrl}/${house.houseId}/addAid`, aid, { headers });\n  }\n\n  getAidList(house: House): Observable<any> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    return this.http.get(`${this.baseUrl}/${house.houseId}/getAllAidsForHouse`, { headers });\n  }\n\n  getAid(aid: Aid): Observable<any> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    return this.http.get(`${this.baseUrl}/getAid/${aid.aidId}`, { headers });\n  }\n\n  updateAid(houseId: number, aid: Aid): Observable<any> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    return this.http.put(`${this.baseUrl}/${houseId}/updateAid`, aid, { headers });\n  }\n}\n","<div class=\"container col-lg-6\" id=\"registerDiv\">\n      <h1 class=\"text-center\">User-Registration</h1>\n      <div class=\"card\" style=\"text-align: center;\">\n            <div class=\"card-body\">\n                  <form class=\"form-group\">\n                        <!--<div class=\"alert alert-warning\" *ngIf='invalidLogin'>{{errorMessage}}</div>-->\n                        <div class=\"alert alert-success\" *ngIf='registrationSuccess'>{{successMessage}}</div>\n                        <div class=\"form-group\" style=\"text-align: left; margin-bottom: 10px;\">\n                              <label for=\"email\" style=\"font-weight: bold;\">Email :</label>\n                              <input type=\"email\" class=\"form-control\" id=\"email\" [(ngModel)]=\"email\"\n                                    placeholder=\"Enter Email\" name=\"email\">\n                        </div>\n                        <div class=\"form-group\" style=\"text-align: left; margin-top: 10px;\">\n                              <label for=\"pwd\" style=\"font-weight: bold;\">Password:</label>\n                              <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" id=\"password\"\n                                    placeholder=\"Enter password\" name=\"password\">\n                        </div>\n                        <div *ngIf=\"showSpinner\" class=\"d-flex justify-content-center\">\n                              <div class=\"spinner-border\" role=\"status\">\n                                    <span class=\"sr-only\" id=\"loading\"></span>\n                              </div>\n                        </div>\n                        <button (click)=register() [disabled]=\"submitted\" style=\"margin-top: 10px; text-align: center;\"\n                              class=\"btn btn-success\">Register</button>\n                  </form>\n            </div>\n      </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { RegisterService } from './register.service';\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\nexport class RegisterUserComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private registerService: RegisterService) { }\n\n  email: string;\n  password: string;\n  errorMessage = 'Invalid Credentials';\n  successMessage: string;\n  registrationSuccess = false;\n  submitted: boolean = false;\n  showSpinner: boolean = false;\n\n  ngOnInit(): void {\n  }\n\n  register() {\n    document.getElementById(\"registerDiv\").style.opacity = \"0.5\";\n    document.getElementById(\"headerDiv\").style.opacity = \"0.5\";\n    this.submitted = true;\n    this.showSpinner = true;\n    this.registerService.register(this.email, this.password).subscribe((result) => {\n      if (result) {\n        console.log(result)\n        this.registrationSuccess = true;\n        this.successMessage = 'Registration Successful.';\n        this.showSpinner = false;\n        document.getElementById(\"registerDiv\").style.opacity = \"1\";\n        document.getElementById(\"headerDiv\").style.opacity = \"1\";\n        this.router.navigate(['/login']);\n      }\n    }, () => {\n      document.getElementById(\"registerDiv\").style.opacity = \"1\"\n      document.getElementById(\"headerDiv\").style.opacity = \"1\";\n      this.registrationSuccess = false;\n      this.showSpinner = false;\n      this.submitted = false\n    });\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  private baseUrl = 'http://Servicemanagement-env.eba-8uum3ycj.ap-south-1.elasticbeanstalk.com/v1';\n  //private baseUrl = 'http://10.0.2.2:8080/v1';\n  //private baseUrl = 'http://localhost:8080/v1';\n  //private baseUrl = 'http://192.168.1.4:8080/v1';\n\n  user: User = new User();\n\n  constructor(private http: HttpClient) { }\n\n  register(email: string, password: string): Observable<Object> {\n    this.user.email = email;\n    this.user.password = password;\n    this.user.username = email;\n\n    return this.http.post(`${this.baseUrl}/register`, this.user);\n  }\n}\n","<h1 class=\"text-center\">Payment Alerts</h1>\n<div *ngFor=\"let alert of missedAlerts\">\n\n      <div *ngIf=\"alert\" class=\"alert alert-danger\" role=\"alert\">\n            <strong>{{alert.message}}</strong>\n            <div style=\"float: right;\">\n\n                  <span (click)=\"closeMissed(alert)\">x</span>\n\n            </div>\n\n      </div>\n</div>\n\n<div *ngFor=\"let wAlert of warningAlert\">\n\n      <div *ngIf=\"wAlert\" class=\"alert alert-warning\" role=\"alert\">\n            <strong>{{wAlert.message}}</strong>\n            <div style=\"float: right;\">\n\n                  <span (click)=\"closeWarning(wAlert)\">x</span>\n\n            </div>\n\n      </div>\n</div>\n<div *ngIf=\"missedAlerts.length===0 && warningAlert.length===0\">\n      <div class=\"alert alert-info\" role=\"alert\">\n            <strong>You do not any payment alerts!!!</strong>\n      </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PaymentAlertService } from './payment-alert.service';\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\n@Component({\n  selector: 'app-payemnt-alerts',\n  templateUrl: './payemnt-alerts.component.html',\n  styleUrls: ['./payemnt-alerts.component.css']\n})\nexport class PayemntAlertsComponent implements OnInit {\n  missedAlerts: Alert[] = new Array<Alert>();\n  warningAlert: Alert[] = new Array<Alert>();\n\n  constructor(private router: Router, private paymentAlertService: PaymentAlertService) {\n  }\n\n  ngOnInit(): void {\n    this.paymentAlertService.getMissedPayments().subscribe(data => {\n      if (data) {\n        var d = data as Array<string>;\n        d.forEach(e => {\n          var a: Alert = { type: \"alert alert-danger\", message: e };\n          this.missedAlerts.push(a);\n        });\n        this.missedAlerts.concat(data as Array<Alert>);\n      }\n    },\n      (error: any) => console.log(error)\n    );\n\n    this.paymentAlertService.getPaymentNotification().subscribe(data => {\n      if (data) {\n        var d = data as Array<string>;\n        d.forEach(e => {\n          var a: Alert = { type: \"alert alert-danger\", message: e };\n          this.warningAlert.push(a);\n        });\n        this.warningAlert.concat(data as Array<Alert>);\n      }\n    },\n      (error: any) => console.log(error)\n    );\n  }\n\n  closeMissed(alert: Alert) {\n    this.missedAlerts.splice(this.missedAlerts.indexOf(alert), 1);\n  }\n\n  closeWarning(alert: Alert) {\n    this.warningAlert.splice(this.warningAlert.indexOf(alert), 1);\n  }\n\n  reset() {\n    this.missedAlerts = Array.from(this.missedAlerts);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Aid } from '../aid';\nimport { Observable } from \"rxjs\";\nimport { AidService } from '../aid.service';\nimport { Router } from '@angular/router';\nimport { House } from '../house';\n\n@Component({\n  selector: 'app-list-aid',\n  templateUrl: './list-aid.component.html',\n  styleUrls: ['./list-aid.component.css']\n})\nexport class ListAidComponent implements OnInit {\n\n  aids: Observable<Aid[]>;\n  house: House = new House();\n  pageHeader: string;\n  aid: Aid = new Aid();\n  showSpinner: boolean = false;\n  addAidButtonDisabled: boolean;\n\n  constructor(private aidService: AidService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.house = history.state.house;\n    this.showSpinner = true;\n    this.addAidButtonDisabled = true;\n    if (this.house != undefined) {\n      this.pageHeader = `${this.house.houseNo}`;\n    }\n\n    this.reloadData();\n\n  }\n\n  reloadData() {\n    this.aidService.getAidList(this.house).subscribe(resp => {\n      if (resp) {\n        this.showSpinner = false;\n        this.addAidButtonDisabled = false;\n      }\n      this.aids = resp;\n    });\n  }\n\n  goToAddAid(pageName: string) {\n    this.router.navigate(['/addAid'], { state: { house: this.house } });\n  }\n\n  navigate(aid: Aid): void {\n    aid.house = this.house;\n    this.router.navigate(['/showAid'], { state: { aid: aid } });\n  }\n}\n","<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2 style=\"text-align: center;\">Aid List</h2>\n  </div>\n  <div class=\"panel-body\" style=\"text-align: center;\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>{{pageHeader}}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let aid of aids\" (click)=\"navigate(aid)\">\n          <td>{{aid.name}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div *ngIf=\"showSpinner\" class=\"d-flex justify-content-center\">\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\" id=\"loading\"></span>\n    </div>\n  </div>\n  <div style=\"text-align: center;\">\n    <button (click)=\"goToAddAid('addAid')\" [disabled]=\"addAidButtonDisabled\" class=\"btn btn-success\"\n      style=\"margin-top: 10px;\">Add New Aid</button>\n  </div>\n</div>","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\ndeclare var cordova;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'DSM';\n  notId: number = 1;\n  alertData: string[];\n  homeButtonSelected: boolean;\n  paymentsButtonSelected: boolean;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    document.addEventListener(\"deviceready\", function () { }, false);\n\n    var username = localStorage.getItem(\"USERNAME\");\n    if (username) {\n      var initials = username.slice(0, 2);\n      document.getElementById(\"profilePic\").innerHTML = initials.toUpperCase();\n    }\n\n    document.getElementById(\"homeButton\").style.backgroundColor = \"#BFBAB5\";\n    this.homeButtonSelected = true;\n    this.paymentsButtonSelected = false;\n    cordova.plugins.notification.local.schedule({\n      id: 1,\n      title: 'DSM Payment Reminder!',\n      text: 'Check your payments and overdues for today!',\n      trigger: { every: { hour: 9, minute: 15 }, count: 1 },\n    });\n\n  }\n\n  home() {\n    this.homeButtonSelected = true;\n    this.paymentsButtonSelected = false\n    document.getElementById(\"homeButton\").style.backgroundColor = \"#BFBAB5\";\n    document.getElementById(\"paymentsButton\").style.backgroundColor = \"#E7E3DF\";\n    this.router.navigate(['ChooseService']);\n  }\n\n  goToProfile() {\n    this.router.navigate(['UserDetails']);\n  }\n\n  checkPayments() {\n    this.homeButtonSelected = false;\n    this.paymentsButtonSelected = true\n    document.getElementById(\"homeButton\").style.backgroundColor = \"#E7E3DF\";\n    document.getElementById(\"paymentsButton\").style.backgroundColor = \"#BFBAB5\";\n    this.router.navigate(['paymentAlert']);\n  }\n}\n\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<div class=\"backgroundDiv\">\n  <div id=\"headerDiv\" class=\"header\" style=\"text-align: left;\">\n    <a (click)=\"home()\" class=\"logo\">{{title}}</a>\n    <span (click)=\"goToProfile()\" id=\"profilePic\" class=\"dot\"></span>\n  </div>\n\n  <div class=\"container\">\n    <hr>\n    <div style=\"margin-bottom: 4px\">\n      <table style=\"width:100%\">\n        <tr>\n          <td id=\"homeButton\" (click)=\"home()\" style=\"text-align: center; width: 50%;border-radius: 4px;\n          overflow: hidden;\"><i class=\"fa fa-home fa-3x\"></i>\n          </td>\n          <td id=\"paymentsButton\" (click)=\"checkPayments()\" style=\"text-align: center; width: 50%;border-radius: 4px;\n          overflow: hidden;\"><i class=\"fa fa-rupee fa-3x\"></i>\n          </td>\n        </tr>\n      </table>\n\n    </div>\n    <div class=\"card\" style=\"background: #BFBAB5;\">\n      <div class=\"card-body\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n\n  <footer class=\"footer\">\n    <div class=\"container\">\n      <span>*For personal use only</span>\n    </div>\n  </footer>\n</div>","import { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateHouseComponent } from './create-house/create-house.component';\nimport { ListHouseComponent } from './list-house/list-house.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CreateAidComponent } from './create-aid/create-aid.component';\nimport { ListAidComponent } from './list-aid/list-aid.component';\nimport { AidDetailsComponent } from './aid-details/aid-details.component';\nimport { UpdateAidComponent } from './update-aid/update-aid.component';\nimport { PaymentComponent } from './payment/payment.component';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { LoginUserComponent } from './login-user/login-user.component';\nimport { GlobalErrorHandler } from './GlobalErrorHandler';\nimport { CreateExpanseComponent } from './create-expanse/create-expanse.component';\nimport { ListExpanseComponent } from './list-expanse/list-expanse.component';\nimport { ChoseServiceComponent } from './chose-service/chose-service.component';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { PayemntAlertsComponent } from './payemnt-alerts/payemnt-alerts.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateHouseComponent,\n    ListHouseComponent,\n    CreateAidComponent,\n    ListAidComponent,\n    AidDetailsComponent,\n    UpdateAidComponent,\n    PaymentComponent,\n    RegisterUserComponent,\n    LoginUserComponent,\n    CreateExpanseComponent,\n    ListExpanseComponent,\n    ChoseServiceComponent,\n    UserDetailsComponent,\n    PayemntAlertsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [{ provide: ErrorHandler, useClass: GlobalErrorHandler }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../user';\nimport { AuthenticatedUserDetails } from '../authenticatedUserDetails';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private baseUrl = 'http://Servicemanagement-env.eba-8uum3ycj.ap-south-1.elasticbeanstalk.com/v1';\n  //private baseUrl = 'http://10.0.2.2:8080/v1';\n  //private baseUrl = 'http://localhost:8080/v1';\n  //private baseUrl = 'http://192.168.1.4:8080/v1';\n\n  constructor(private http: HttpClient) { }\n\n  user: User = new User();\n  token: any;\n  errorMessage: any;\n\n  login(email: string, password: string): Observable<AuthenticatedUserDetails> {\n    //var user: User = new User();\n    this.user.username = email;\n    this.user.password = password;\n    return this.http.post<AuthenticatedUserDetails>(`${this.baseUrl}/authenticate`, this.user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticatedUserDetails } from '../authenticatedUserDetails';\nimport { User } from '../user';\nimport { LoginService } from './login.service';\n\n\n@Component({\n  selector: 'app-login-user',\n  templateUrl: './login-user.component.html',\n  styleUrls: ['./login-user.component.css']\n})\nexport class LoginUserComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private loginService: LoginService) { }\n\n  email: string;\n  password: string;\n  showSpinner: boolean = false;\n  errorMessage = 'Invalid Credentials';\n  successMessage: string;\n  loginSuccess = true;\n  submitted: boolean = false;\n  authenticatedUserDetails: AuthenticatedUserDetails;\n  user: User = new User();\n  baseUrl = 'http://Servicemanagement-env.eba-8uum3ycj.ap-south-1.elasticbeanstalk.com/v1/register';\n  //baseUrl = 'http://10.0.2.2:8080/v1/register';\n  //baseUrl = 'http://localhost:8080/v1/register';\n  //baseUrl = 'http://localhost:4200/register';\n  //baseUrl = 'http://192.168.1.4:8080/v1/register';\n\n  ngOnInit(): void {\n    document.getElementById(\"profilePic\").style.visibility = \"hidden\";\n    if (localStorage.getItem(\"USERNAME\") && localStorage.getItem(\"USERID\") && localStorage.getItem(\"TOKEN\")) {\n      this.user.email = localStorage.getItem(\"USERNAME\"); //email and username are same\n      this.user.userId = parseInt(localStorage.getItem(\"USERID\"));\n      this.user.username = localStorage.getItem(\"USERNAME\");\n      this.goToChoices();\n    }\n  }\n\n  login() {\n    this.showSpinner = true;\n    document.getElementById(\"loginDiv\").style.opacity = \"0.5\";\n    document.getElementById(\"headerDiv\").style.opacity = \"0.5\"\n    this.loginService.login(this.email, this.password).subscribe(result => {\n      if (result) {\n        this.authenticatedUserDetails = result;\n        console.log(this.authenticatedUserDetails.token);\n        this.showSpinner = false;\n        document.getElementById(\"loginDiv\").style.opacity = \"1\";\n        localStorage.setItem(\"TOKEN\", this.authenticatedUserDetails.token);\n        localStorage.setItem(\"USERNAME\", this.email);\n        localStorage.setItem(\"USERID\", this.authenticatedUserDetails.userId.toString());\n        this.user.email = this.email;\n        this.user.userId = this.authenticatedUserDetails.userId;\n        this.user.username = this.email;\n        this.goToChoices();\n      }\n\n    },\n      error => {\n        this.loginSuccess = false;\n        this.showSpinner = false;\n        document.getElementById(\"loginDiv\").style.opacity = \"1\";\n        document.getElementById(\"headerDiv\").style.opacity = \"1\";\n\n      });\n  }\n\n  goToHouses() {\n    this.router.navigate([`/${this.email}/getAllHousesForUser`], { state: { user: this.user } });\n  }\n\n  goToChoices() {\n    document.getElementById(\"profilePic\").style.visibility = \"visible\";\n    this.router.navigate([\"/ChooseService\"], { state: { user: this.user } });\n  }\n\n  goToRegister() {\n    this.router.navigate(['/register']);\n  }\n\n}\n","<div class=\"container col-lg-6\" id=\"loginDiv\">\n      <h1 class=\"text-center\">Login</h1>\n      <div class=\"card\" style=\"text-align: center; background: #BFBAB5;\">\n            <div class=\"card-body\">\n                  <form class=\"form-group\">\n                        <div class=\"alert alert-warning\" *ngIf='!loginSuccess'>{{errorMessage}}</div>\n                        <!--<div class=\"alert alert-success\" *ngIf='loginSuccess'>{{successMessage}}</div>-->\n                        <div class=\"form-group\" style=\"text-align: left;\">\n                              <label for=\"email\" style=\"font-weight: bold;\">User Name :</label>\n                              <input type=\"email\" class=\"form-control\" id=\"email\" [(ngModel)]=\"email\"\n                                    placeholder=\"Enter Email\" name=\"email\">\n                        </div>\n                        <div class=\"form-group\" style=\"text-align: left; margin-top: 10px;\">\n                              <label for=\"pwd\" style=\"font-weight: bold;\">Password:</label>\n                              <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" id=\"password\"\n                                    placeholder=\"Enter Password\" name=\"password\">\n                        </div>\n                        <div *ngIf=\"showSpinner\" class=\"d-flex justify-content-center\">\n                              <div class=\"spinner-border\" role=\"status\">\n                                    <span class=\"sr-only\" id=\"loading\"></span>\n                              </div>\n                        </div>\n                        <button (click)=login() [disabled]=\"showSpinner\" style=\"margin-top: 10px;\"\n                              class=\"btn btn-success\">Login</button>\n                  </form>\n            </div>\n            <div style=\"margin-bottom: 5px;\">\n                  <label>Don't have an account? <a style=\"font-weight: bold; text-decoration: none;\"\n                              href=\"{{baseUrl}}\">Sign-up!</a> </label>\n            </div>\n      </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../user';\nimport { UserService } from './user.service';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  user: User;\n  pageTitle: string;\n  showSpinner: boolean;\n\n  ngOnInit(): void {\n    this.user = new User();\n    document.getElementById(\"userDetail\").style.opacity = \"0.5\";\n    document.getElementById(\"headerDiv\").style.opacity = \"0.5\";\n    this.showSpinner = true;\n    this.getUserDetails();\n  }\n\n  private getUserDetails() {\n    this.userService.getUserDetails()\n      .subscribe(data => {\n        if (data) {\n          document.getElementById(\"userDetail\").style.opacity = \"1\";\n          document.getElementById(\"headerDiv\").style.opacity = \"1\";\n          this.showSpinner = false;\n          console.log(data);\n          this.user = data;\n          this.pageTitle = `${this.user.username}`;\n          document.getElementById(\"userPic\").innerHTML = this.user.username.slice(0, 2).toUpperCase();\n        }\n\n      }, error => console.log(error));\n  }\n\n  logout() {\n    localStorage.removeItem(\"USERID\");\n    localStorage.removeItem(\"USERNAME\");\n    localStorage.removeItem(\"TOKEN\");\n    this.router.navigate([\"\"]);\n  }\n}\n","<div id=\"userDetail\">\n      <h2 style=\"text-align: center;\">{{pageTitle}}</h2>\n\n      <hr />\n      <div *ngIf=\"user\">\n            <div style=\"text-align: center;\">\n                  <span id=\"userPic\" class=\"dot\"></span>\n            </div>\n            <hr />\n            <div *ngIf=\"showSpinner\" class=\"d-flex justify-content-center\">\n                  <div class=\"spinner-border\" role=\"status\">\n                        <span class=\"sr-only\" id=\"loading\"></span>\n                  </div>\n            </div>\n            <div>\n                  <label><b>UserId: </b></label> {{user.userId}}\n            </div>\n            <hr />\n            <div>\n                  <label><b>UserName: </b></label> {{user.username}}\n            </div>\n            <hr />\n            <div>\n                  <label><b>Email: </b></label> {{user.email}}\n            </div>\n            <hr />\n\n      </div>\n      <br>\n      <br>\n      <div style=\"text-align: center;\">\n            <button (click)=\"logout()\" class=\"btn btn-danger\"\n                  style=\"margin-left: 10px; margin-top: 10px;\">Logout</button>\n      </div>","import { Injectable } from '@angular/core';\nimport { Expanse } from './expanse';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpanseService {\n  private baseUrl = 'http://Servicemanagement-env.eba-8uum3ycj.ap-south-1.elasticbeanstalk.com/v1/dem';\n  //private baseUrl = 'http://10.0.2.2:8080/v1/dem';\n  //private baseUrl = 'http://localhost:8080/v1/dem';\n  //private baseUrl = 'http://192.168.1.4:8080/v1/dem';\n  //private baseUrl = 'http://localhost:8080/v1/dem';\n\n  constructor(private http: HttpClient) { }\n\n  createExpanse(expanse: Expanse): Observable<any> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    return this.http.post(`${this.baseUrl}/addExpanse`, expanse, { headers });\n  }\n\n  getExpanseListForUser(username: String): Observable<any> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    return this.http.get(`${this.baseUrl}/getAllExpanses/${username}`, { headers });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-chose-service',\n  templateUrl: './chose-service.component.html',\n  styleUrls: ['./chose-service.component.css']\n})\nexport class ChoseServiceComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  user: User;\n  username: string = localStorage.getItem(\"USERNAME\");\n\n  ngOnInit(): void {\n    this.user = history.state.user;\n    document.getElementById(\"headerDiv\").style.opacity = \"1\";\n    document.getElementById(\"profilePic\").innerHTML = this.username.slice(0, 2).toUpperCase();\n  }\n  navigateToDEM(route: string) {\n    this.router.navigate([`${route}/${this.username}`]);\n  }\n\n  navigateToDSM(route: string) {\n    this.router.navigate([`${this.username}/getAllHousesForUser`], { state: { user: this.user } });\n  }\n}\n","<div class=\"panel panel-primary\" style=\"text-align: center;\">\n      <div class=\"panel-heading\">\n            <h2>Categories</h2>\n      </div>\n      <div class=\"panel-body\">\n            <table class=\"table table-striped\">\n                  <tbody>\n                        <tr>\n                              <td (click)=\"navigateToDEM('getAllExpensesForUser')\">Daily Expanse Logger</td>\n                        </tr>\n                        <tr>\n                              <td (click)=\"navigateToDSM('getAllHousesForUser')\">Service Expanse Manager</td>\n                        </tr>\n                  </tbody>\n            </table>\n      </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from \"rxjs\";\nimport { Router } from '@angular/router';\nimport { House } from '../house';\nimport { HouseService } from '../house.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-list-house',\n  templateUrl: './list-house.component.html',\n  styleUrls: ['./list-house.component.css']\n})\nexport class ListHouseComponent implements OnInit {\n\n  constructor(private houseService: HouseService, private router: Router) { }\n\n  houses: Observable<House[]>;\n  showSpinner: boolean = false;\n  addHouseButtonDisabled: boolean;\n  user: User = new User();\n\n  ngOnInit(): void {\n    this.showSpinner = true;\n    this.addHouseButtonDisabled = true;\n    this.reloadData();\n    this.user = history.state.user;\n  }\n\n  reloadData() {\n    this.houseService.getHousesList().subscribe(resp => {\n      if (resp) {\n        this.showSpinner = false;\n        this.addHouseButtonDisabled = false;\n      }\n      this.houses = resp;\n    });\n  }\n\n  goToAddHouse(pageName: string) {\n    this.router.navigate([pageName], { state: { user: this.user } });\n  }\n\n  navigate(house: House): void {\n    this.router.navigate(['/ListAids'], { state: { house: house } });\n  }\n\n}\n","<div class=\"panel panel-primary\" style=\"text-align: center;\">\n  <div class=\"panel-heading\">\n    <h2>Houses</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>House Id</th>\n          <th>House No</th>\n          <th>Address</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let house of houses\" (click)=\"navigate(house)\">\n          <td> {{house.houseId}} </td>\n          <td> {{house.houseNo}} </td>\n          <td> {{house.address}} </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div *ngIf=\"showSpinner\" class=\"d-flex justify-content-center\">\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\" id=\"loading\"></span>\n    </div>\n  </div>\n  <div style=\"text-align: center;\">\n    <button (click)=\"goToAddHouse('addHouse')\" [disabled]=\"addHouseButtonDisabled\" class=\"btn btn-success\"\n      style=\"margin-top: 10px;\">Add New House</button>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { $ } from 'protractor';\nimport { Aid } from '../aid';\nimport { AidService } from '../aid.service';\n\n@Component({\n  selector: 'app-aid-details',\n  templateUrl: './aid-details.component.html',\n  styleUrls: ['./aid-details.component.css']\n})\nexport class AidDetailsComponent implements OnInit {\n\n  aid: Aid = new Aid();\n  pageTitle: string;\n  havePaid: boolean;\n  addPaymentClicked: boolean;\n  showSpinner: boolean;\n  updateAidButtonDisabled: boolean;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n    private aidService: AidService) { }\n\n  ngOnInit(): void {\n    this.aid = new Aid();\n    this.aid = history.state.aid;\n    this.showSpinner = true;\n    this.updateAidButtonDisabled = true;\n    document.getElementById(\"aidDetail\").style.opacity = \"0.5\";\n    document.getElementById(\"headerDiv\").style.opacity = \"0.5\";\n    this.getAid();\n  }\n\n  private getAid() {\n    this.aidService.getAid(this.aid)\n      .subscribe(data => {\n        if (data) {\n          document.getElementById(\"aidDetail\").style.opacity = \"1\";\n          document.getElementById(\"headerDiv\").style.opacity = \"1\";\n          this.showSpinner = false;\n          this.updateAidButtonDisabled = false;\n          console.log(data);\n          this.aid = data;\n          this.havePaid = this.aid.payments.length > 0 && this.aid.payments[0].amount > 0 ? true : false;\n          this.pageTitle = `${this.aid.name}, ${this.aid.house.houseNo}`;\n        }\n\n      }, error => console.log(error));\n  }\n\n  updateAid(aid: Aid) {\n    this.router.navigate(['/updateAid'], { state: { aid: aid } });\n  }\n\n  addPayment() {\n\n    this.addPaymentClicked = true;\n  }\n\n  paymentSuccessfulHandler(paymentSuccessful: boolean) {\n    this.addPaymentClicked = false;\n    this.getAid();\n  }\n}\n","<div id=\"aidDetail\">\n  <h2 style=\"text-align: center;\">{{pageTitle}}</h2>\n\n  <hr />\n  <div *ngIf=\"aid\">\n    <!--<form (ngSubmit)=\"onSubmit()\">-->\n    <div>\n      <label><b>AidId: </b></label> {{aid.aidId}}\n    </div>\n    <hr />\n    <div>\n      <label><b>Name: </b></label> {{aid.name}}\n    </div>\n    <hr />\n    <div>\n      <label><b>Start Date: </b></label> {{aid.startDate}}\n    </div>\n    <hr />\n    <div>\n      <label><b>House No: </b></label> {{aid.house.houseNo}}\n    </div>\n    <hr />\n    <div>\n      <label><b>Address: </b></label> {{aid.house.address}}\n    </div>\n    <hr />\n    <div>\n      <label><b>End Date: </b></label> {{aid.endDate}}\n    </div>\n    <hr />\n    <div>\n      <label><b>Cost Of Service: </b></label> {{aid.costOfService}}\n    </div>\n    <hr />\n\n    <div style=\"border-style: ridge; text-align: center;\">\n      <p style=\"font-weight: bolder;\">Payments</p>\n      <hr>\n      <div *ngIf=\"havePaid\" class=\"panel-body\" style=\"text-align: center;\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Id</th>\n              <th>Amount</th>\n              <th>Comment</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let payment of aid.payments\" (click)=\"navigate(payment)\">\n              <td>{{payment.paymentId}}</td>\n              <td>{{payment.amount}}</td>\n              <td>{{payment.comment}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div *ngIf=\"!havePaid\" class=\"alert alert-warning\">\n        You have not made any payments for this service yet!!!\n      </div>\n      <div id=\"addPaymentDiv\">\n        <div *ngIf=\"addPaymentClicked\" class=\"card\">\n          <app-payment [aidId]=aid.aidId (closePaymentBox)=\"paymentSuccessfulHandler($event)\"></app-payment>\n        </div>\n      </div>\n\n      <div *ngIf=\"showSpinner\" class=\"d-flex justify-content-center\">\n        <div class=\"spinner-border\" role=\"status\">\n          <span class=\"sr-only\" id=\"loading\"></span>\n        </div>\n      </div>\n\n      <button (click)=\"addPayment()\" [disabled]=\"addPaymentClicked\" class=\"btn btn-info\"\n        style=\"margin-left: 10px; margin-bottom: 5px;\">Add\n        Payment</button>\n    </div>\n    <hr />\n    <div>\n      <label><b>Remaining Amt: </b></label> {{aid.remainingAmount}}\n    </div>\n    <hr />\n    <div>\n      <label><b>Complete: </b></label> {{aid.complete}}\n    </div>\n    <hr />\n    <!--</form>-->\n  </div>\n\n  <br>\n  <br>\n  <div style=\"text-align: center;\">\n    <button (click)=\"updateAid(aid)\" [disabled]=\"updateAidButtonDisabled || addPaymentClicked\" class=\"btn btn-info\"\n      style=\"margin-left: 10px; margin-top: 10px;\">Update Aid</button>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AidService } from '../aid.service';\nimport { Router } from '@angular/router';\nimport { Aid } from '../aid';\n\n@Component({\n  selector: 'app-update-aid',\n  templateUrl: './update-aid.component.html',\n  styleUrls: ['./update-aid.component.css']\n})\nexport class UpdateAidComponent implements OnInit {\n\n  aid: Aid = new Aid();\n  pageTitle: string;\n  submitted: boolean = false;\n  isValid: boolean = true;\n  updateClicked = false;\n  validationMessage = \"* marked fields are mandatory.\"\n  constructor(private aidService: AidService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.aid = history.state.aid;\n    this.pageTitle = `${this.aid.name}`;\n  }\n\n  onSubmit() {\n    if (this.aid.name && this.aid.endDate && this.aid.costOfService) {\n      this.isValid = true;\n      this.updateAid();\n    }\n    else {\n      this.isValid = false;\n      return false;\n    }\n\n  }\n\n  updateAid() {\n    this.updateClicked = true;\n    document.getElementById(\"updateDiv\").style.opacity = \"0.5\";\n    document.getElementById(\"headerDiv\").style.opacity = \"0.5\"\n    this.aidService.updateAid(this.aid.house.houseId, this.aid)\n      .subscribe(data => {\n        console.log(data);\n        this.aid = data;\n        this.submitted = true;\n        this.gotoList();\n      }, error => console.log(error));\n  }\n\n  gotoList() {\n    document.getElementById(\"updateDiv\").style.opacity = \"1\";\n    document.getElementById(\"headerDiv\").style.opacity = \"1\";\n    this.router.navigate(['/showAid'], { state: { aid: this.aid } });\n  }\n\n  cancel() {\n    this.router.navigate(['/showAid'], { state: { aid: this.aid } });\n  }\n\n}\n","<h3 style=\"text-align: center;\">{{pageTitle}}</h3>\n<div [hidden]=\"submitted\" id=\"updateDiv\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Aid Id:</label>\n      <input type=\"text\" class=\"form-control\" id=\"aidId\" required [(ngModel)]=\"aid.aidId\" name=\"aidId\" readonly>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Name<span style=\"color:#ff0000\">*</span>:</label>\n      <input type=\"text\" class=\"form-control\" id=\"aidName\" required [(ngModel)]=\"aid.name\" name=\"aidName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">House No:</label>\n      <input type=\"text\" class=\"form-control\" id=\"houseNo\" required [(ngModel)]=\"aid.house.houseNo\" name=\"houseNo\"\n        readonly>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Address:</label>\n      <input type=\"text\" class=\"form-control\" id=\"address\" required [(ngModel)]=\"aid.house.address\" name=\"address\"\n        readonly>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Start Date<span style=\"color:#ff0000\">*</span>:</label>\n      <input type=\"date\" class=\"form-control\" id=\"startDate\" required [(ngModel)]=\"aid.startDate\" name=\"startDate\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">End Date<span style=\"color:#ff0000\">*</span>:</label>\n      <input type=\"date\" class=\"form-control\" id=\"endDate\" required [(ngModel)]=\"aid.endDate\" name=\"endDate\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Cost Of Service<span style=\"color:#ff0000\">*</span>:</label>\n      <input type=\"number\" class=\"form-control\" id=\"costOfService\" required [(ngModel)]=\"aid.costOfService\"\n        name=\"costOfService\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Remaining:</label>\n      <input type=\"text\" class=\"form-control\" id=\"remaining\" required [(ngModel)]=\"aid.remainingAmount\" name=\"remaining\"\n        readonly>\n    </div>\n\n    <br>\n    <div [hidden]=\"isValid\">\n      <p style=\"background-color: rgb(233, 95, 95); text-align: center;\">{{validationMessage}}</p>\n    </div>\n    <br>\n    <div style=\"text-align: center;\">\n      <button type=\"submit\" [disabled]=\"updateClicked\" class=\"btn btn-success\">Update</button>\n      <button type=\"button\" [disabled]=\"updateClicked\" class=\"btn btn-success\" style=\"margin-left: 4%;\"\n        (click)=\"cancel()\">Cancel</button>\n    </div>\n  </form>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AidDetailsComponent } from './aid-details/aid-details.component';\nimport { ChoseServiceComponent } from './chose-service/chose-service.component';\nimport { CreateAidComponent } from './create-aid/create-aid.component';\nimport { CreateExpanseComponent } from './create-expanse/create-expanse.component';\nimport { CreateHouseComponent } from './create-house/create-house.component';\nimport { ListAidComponent } from './list-aid/list-aid.component';\nimport { ListExpanseComponent } from './list-expanse/list-expanse.component';\nimport { ListHouseComponent } from './list-house/list-house.component';\nimport { LoginUserComponent } from './login-user/login-user.component';\nimport { PayemntAlertsComponent } from './payemnt-alerts/payemnt-alerts.component';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { UpdateAidComponent } from './update-aid/update-aid.component';\nimport { UserDetailsComponent } from './user-details/user-details.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginUserComponent },\n  { path: 'login', component: LoginUserComponent },\n  { path: 'addExpanse', component: CreateExpanseComponent },\n  { path: ':username/getAllHousesForUser', component: ListHouseComponent },\n  { path: 'register', component: RegisterUserComponent },\n  { path: 'addHouse', component: CreateHouseComponent },\n  { path: 'addAid', component: CreateAidComponent },\n  { path: 'ListAids', component: ListAidComponent },\n  { path: 'showAid', component: AidDetailsComponent },\n  { path: 'updateAid', component: UpdateAidComponent },\n  { path: ':houseId/getAllAidsForHouse', component: ListAidComponent },\n  { path: 'getAllExpensesForUser/:username', component: ListExpanseComponent },\n  { path: 'ChooseService', component: ChoseServiceComponent },\n  { path: 'UserDetails', component: UserDetailsComponent },\n  { path: 'paymentAlert', component: PayemntAlertsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HouseService {\n  private baseUrl = 'http://Servicemanagement-env.eba-8uum3ycj.ap-south-1.elasticbeanstalk.com/v1';\n  //private baseUrl = 'http://localhost:8080/v1';\n  //private baseUrl = 'http://10.0.2.2:8080/v1';\n  //private baseUrl = 'http://192.168.1.4:8080/v1';\n\n  constructor(private http: HttpClient) { }\n\n  getHouse(id: number): Observable<any> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    return this.http.get(`${this.baseUrl}/${id}`, { headers });\n  }\n\n  createHouse(house: Object, user: User): Observable<Object> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    return this.http.post(`${this.baseUrl}/${user.userId}/addHouse`, house, { headers });\n  }\n\n  //updateHouse(id: number, value: any): Observable<Object> {\n  // return this.http.put(`${this.baseUrl}/${id}`, value);\n  //}\n\n  /*deleteHouse(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }*/\n\n  getHousesList(): Observable<any> {\n    const headers = { 'Authorization': `Bearer ${localStorage.getItem(\"TOKEN\")}` };\n    var username: string = localStorage.getItem(\"USERNAME\");\n    return this.http.get(`${this.baseUrl}/${username}/getAllHousesForUser`, { headers });\n  }\n}\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}